{"version":3,"sources":["widgets/Options.js","widgets/Overview.js","data.js","widgets/GlobalStatistics.js","widgets/LocalStatistics.js","icons/call.svg","widgets/Contact.js","widgets/Link.js","widgets/MedicineDelivery.js","icons/bot.svg","CoBotAvatar.js","widgets/Actions.js","chatbotConfig.js","MessageParser.js","ActionProvider.js","TypedReact.js","App.js","index.js"],"names":["Options","props","className","title","options","map","option","onClick","handler","name","id","GeneralOptions","actionProvider","handleGlobalStats","handleLocalStats","handleContact","handleMedicine","getData","fetch","data","json","Statistics","useState","stats","setStats","loading","setLoading","useEffect","getStats","color","global_total_cases","global_new_cases","global_recovered","global_deaths","local_total_cases","local_new_cases","local_recovered","local_deaths","local_new_deaths","local_active_cases","ContactLink","href","alt","src","UrlIcon","Link","url","target","rel","width","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","DeliveryLink","CoBotAvatar","style","background","BotAvatar","Actions","messages","length","actions","reply","hide","setHide","action","display","marginTop","backgroundColor","padding","borderWidth","borderRadius","replyMessage","createClientMessage","value","addMessageToState","config","lang","botName","customStyles","botMessageBox","chatButton","initialMessages","state","customComponents","botAvatar","widgets","widgetName","widgetFunc","Overview","mapStateToProps","GlobalStatistics","LocalStatistics","Contact","MedicineDelivery","MessageParser","this","message","includes","handleText","text","handleOptions","withAvatar","handleJoke","handleThanks","body","SampleData","items","forEach","item","index","type","handleActionSubmit","ActionProvider","createChatBotMessage","setStateFunc","widget","terminateLoading","cardType","val","jokes","randomJoke","Math","floor","random","setState","TypedReact","App","showBot","toggleBot","content","big","messageParser","left","cascade","prev","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.e89f7e4f.chunk.js","sourcesContent":["const Options = (props) => {\n  return (\n    <div className=\"options\">\n      <h1 className=\"options-header\">{props.title}</h1>\n      <div className=\"options-container\">\n        {props.options.map((option) => {\n          return (\n            <div\n              className=\"option-item\"\n              onClick={option.handler}\n              key={option.id}\n            >\n              {option.name}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Options;\n","import Options from \"./Options\";\n\nconst GeneralOptions = (props) => {\n  const options = [\n    {\n      name: \"Show global statistics\",\n      handler: props.actionProvider.handleGlobalStats,\n      id: 1\n    },\n    {\n      name: \"Show local statistics\",\n      handler: props.actionProvider.handleLocalStats,\n      id: 2\n    },\n    {\n      name: \"Emergency contact\",\n      handler: props.actionProvider.handleContact,\n      id: 3\n    },\n    {\n      name: \"Clinical medicine delivery\",\n      handler: props.actionProvider.handleMedicine,\n      id: 4\n    }\n  ];\n  return <Options options={options} title=\"Options\" {...props} />;\n};\n\nexport default GeneralOptions;\n","export const getData = async () => {\n  let data = await fetch(\n    `https://www.hpb.health.gov.lk/api/get-current-statistical`\n  );\n  data = await data.json();\n  return data.data;\n};\n","import React, { useState, useEffect } from \"react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nimport { getData } from \"../data\";\n\nconst Statistics = () => {\n  const [stats, setStats] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const getStats = async () => {\n      const stats = await getData();\n\n      // const filteredFlights = flights.filter((item) => item.Status === null);\n\n      setStats(stats);\n      setLoading(false);\n    };\n    getStats();\n  }, []);\n\n  return (\n    <div className=\"stats\">\n      <div className=\"column-left\">\n        <p> Total Cases :</p>\n        <p> New Cases :</p>\n        <p> Recovered :</p>\n        <p> Deaths :</p>\n      </div>\n\n      <div className=\"column-right\">\n        <ClipLoader color={\"#fff\"} loading={loading} />\n        <p>{stats.global_total_cases}</p>\n        <p>{stats.global_new_cases}</p>\n        <p>{stats.global_recovered}</p>\n        <p>{stats.global_deaths}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Statistics;\n","import React, { useState, useEffect } from \"react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nimport { getData } from \"../data\";\n\nconst Statistics = () => {\n  const [stats, setStats] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const getStats = async () => {\n      const stats = await getData();\n\n      setStats(stats);\n      setLoading(false);\n    };\n    getStats();\n  }, []);\n\n  return (\n    <div className=\"stats\">\n      <div className=\"column-left\">\n        <p> Total Cases :</p>\n        <p> New Cases :</p>\n        <p> Recovered :</p>\n        <p> Total Deaths :</p>\n        <p> New Deaths :</p>\n        <p> Hospitalized :</p>\n      </div>\n      <div className=\"column-right\">\n        <ClipLoader color={\"#fff\"} loading={loading} />\n        <p>{stats.local_total_cases}</p>\n        <p>{stats.local_new_cases}</p>\n        <p>{stats.local_recovered}</p>\n        <p>{stats.local_deaths}</p>\n        <p>{stats.local_new_deaths}</p>\n        <p>{stats.local_active_cases}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Statistics;\n","export default __webpack_public_path__ + \"static/media/call.0e879c44.svg\";","import React from \"react\";\n\nimport UrlIcon from \"../icons/call.svg\";\n\nconst ContactLink = () => {\n  return (\n    <a href=\"tel:1999\" className=\"tel-link\">\n      <img className=\"url-icon\" alt=\"CallIcon\" src={UrlIcon} />\n      <h1 className=\"tel-header\"> Call 1999 </h1>\n    </a>\n  );\n};\n\nexport default ContactLink;\n","import React from \"react\";\n\nconst Link = ({ url, title }) => {\n  return (\n    <a\n      href={url}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      className=\"url-link\"\n    >\n      <svg\n        width=\"40px\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 26 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      >\n        <path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path>\n        <path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path>\n      </svg>\n      <h1 className=\"url-header\">Go to {title}</h1>\n    </a>\n  );\n};\n\nexport default Link;\n","import React from \"react\";\n\nimport Link from \"./Link\";\n\nconst DeliveryLink = () => {\n  const getUrl = () => {\n    return `https://www.hpb.health.gov.lk/en/covid-19#:~:text=Delivery%20of%20medicine%20from%20hospital%20clinics`;\n  };\n\n  return (\n    <Link url={getUrl()} title={\"delivery of medicine from hospital clinics\"} />\n  );\n};\n\nexport default DeliveryLink;\n","export default __webpack_public_path__ + \"static/media/bot.f1377573.svg\";","import React from \"react\";\n\nimport BotAvatar from \"./icons/bot.svg\";\n\nconst CoBotAvatar = () => {\n  return (\n    <div className=\"react-chatbot-kit-chat-bot-avatar\">\n      <div\n        className=\"react-chatbot-kit-chat-bot-avatar-container\"\n        style={{ background: \"none\" }}\n      >\n        <img alt=\"BotAvatar\" src={BotAvatar} />\n      </div>\n    </div>\n  );\n};\n\nexport default CoBotAvatar;\n","import { useState } from \"react\";\nimport { createClientMessage } from \"react-chatbot-kit\";\n\nconst Actions = (props) => {\n  const { actions, reply } = props.messages[props.messages.length - 1];\n  const [hide, setHide] = useState(false);\n\n  return hide ? (\n    \"\"\n  ) : (\n    <div>\n      {actions.map((action) => {\n        return (\n          <button\n            style={{\n              display: \"block\",\n              marginTop: 10,\n              backgroundColor: \"teal\",\n              color: \"white\",\n              width: \"100%\",\n              padding: \"10px 30px\",\n              borderWidth: 0,\n              borderRadius: 100,\n            }}\n            key={action.title}\n            onClick={() => {\n              setHide(true);\n              const replyMessage = createClientMessage(action.data.value);\n              props.actionProvider.addMessageToState(replyMessage);\n            }}\n          >\n            {action.title}\n          </button>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Actions;\n","import Overview from \"./widgets/Overview\";\nimport GlobalStatistics from \"./widgets/GlobalStatistics\";\nimport LocalStatistics from \"./widgets/LocalStatistics\";\nimport Contact from \"./widgets/Contact\";\nimport MedicineDelivery from \"./widgets/MedicineDelivery\";\nimport CoBotAvatar from \"./CoBotAvatar\";\nimport Actions from \"./widgets/Actions\";\n\nconst config = {\n  lang: \"no\",\n  botName: \"CoBot\",\n  customStyles: {\n    botMessageBox: {\n      backgroundColor: \"#04668a\"\n    },\n    chatButton: {\n      backgroundColor: \"#0f5faf\"\n    }\n  },\n  initialMessages: [\n  //   createChatBotMessage(\n  //     `Hi, I'm here to provide you with latest COVID 19 data to keep you safe!`\n  //   ),\n  //   createChatBotMessage(\n  //     \"Here's a quick overview of what I can help you with. You can also type in.\",\n  //     {\n  //       withAvatar: false,\n  //       delay: 400,\n  //       widget: \"overview\"\n  //     }\n  //   )\n  ],\n  state: {},\n  customComponents: { botAvatar: (props) => <CoBotAvatar {...props} /> },\n  widgets: [\n    {\n      widgetName: \"overview\",\n      widgetFunc: (props) => <Overview {...props} />,\n      mapStateToProps: [\"messages\"]\n    },\n    {\n      widgetName: \"globalStatistics\",\n      widgetFunc: (props) => <GlobalStatistics />\n    },\n    {\n      widgetName: \"localStatistics\",\n      widgetFunc: (props) => <LocalStatistics />\n    },\n    {\n      widgetName: \"emergencyContact\",\n      widgetFunc: (props) => <Contact />\n    },\n    {\n      widgetName: \"medicineDelivery\",\n      widgetFunc: (props) => <MedicineDelivery />\n    },\n    {\n      widgetName: \"actions\",\n      widgetFunc: (props) => <Actions {...props} />,\n      mapStateToProps: [\"messages\"]\n    } \n  ]\n};\n\nexport default config;\n","import SampleData from \"./sample.json\";\nclass MessageParser {\n  constructor(actionProvider, state) {\n    this.actionProvider = actionProvider;\n    this.state = state;\n  }\n\n  parse(message) {\n    if (message.includes(\"hi\") || message.includes(\"hi\")) {\n      return this.actionProvider.handleText({\n        text: \"Welcome, Let's get started\",\n      });\n    }\n    else if (message.includes(\"adapt\")) {\n      const { body, actions } = SampleData;\n      const { items } = body[0];\n      items.forEach((item, index) => {\n        if (item.type === \"TextBlock\") {\n          if (index === items.length - 1 && actions.length > 0) {\n            return this.actionProvider.handleActionSubmit({\n              actions,\n              text: item.text,\n            });\n          } else {\n            return this.actionProvider.handleText({ text: item.text });\n          }\n        }\n      });\n    }\n    else if (\n      message.includes(\"options\") ||\n      message.includes(\"help\") ||\n      message.includes(\"do for me\")\n    ) {\n      return this.actionProvider.handleOptions({ withAvatar: true });\n    }\n\n    else if (\n      message.includes(\"talk\") ||\n      message.includes(\"speak\") ||\n      message.includes(\"real person\") ||\n      message.includes(\"call\") ||\n      message.includes(\"emergency\") ||\n      message.includes(\"contact\")\n    ) {\n      return this.actionProvider.handleContact();\n    }\n\n    else if (\n      message.includes(\"stats\") ||\n      message.includes(\"statistics\") ||\n      message.includes(\"deaths\")\n    ) {\n      return [\n        this.actionProvider.handleGlobalStats(),\n        this.actionProvider.handleLocalStats(),\n      ];\n    }\n\n    else if (message.includes(\"medicine\") || message.includes(\"delivery\")) {\n      return this.actionProvider.handleMedicine();\n    }\n\n    else if (\n      message.includes(\"joke\") ||\n      message.includes(\"jokes\") ||\n      message.includes(\"funny\")\n    ) {\n      return this.actionProvider.handleJoke();\n    }\n\n    else if (message.includes(\"thanks\") || message.includes(\"thank you\")) {\n      return this.actionProvider.handleThanks();\n    } else return this.actionProvider.handleOptions({ withAvatar: true });\n  }\n}\n\nexport default MessageParser;\n","import { createClientMessage } from 'react-chatbot-kit';\n\nclass ActionProvider {\n  constructor(createChatBotMessage, setStateFunc) {\n    this.createChatBotMessage = createChatBotMessage;\n    this.setState = setStateFunc;\n    this.createClientMessage = createClientMessage;\n  }\n  handleText = ({ text }) => {\n    const message = this.createChatBotMessage(text);\n    this.addMessageToState(message);\n  };\n\n  handleActionSubmit = ({ text, actions }) => {\n    const message = this.createChatBotMessage(text, {\n      widget: \"actions\",\n      loading: true,\n      terminateLoading: true,\n      actions,\n      cardType: \"actions\",\n      reply: (val) => this.createClientMessage(val)\n    });\n\n    this.addMessageToState(message);\n  };\n\n  handleOptions = (options) => {\n    const message = this.createChatBotMessage(\n      \"How can I help you? Below are some possible options.\",\n      {\n        widget: \"overview\",\n        loading: true,\n        terminateLoading: true,\n        ...options\n      }\n    );\n\n    this.addMessageToState(message);\n  };\n\n  handleGlobalStats = () => {\n    const message = this.createChatBotMessage(\n      \"Here's the latest global stats.\",\n      {\n        widget: \"globalStatistics\",\n        loading: true,\n        terminateLoading: true,\n        withAvatar: true\n      }\n    );\n\n    this.addMessageToState(message);\n  };\n\n  handleLocalStats = () => {\n    const message = this.createChatBotMessage(\n      \"Here's the latest stats in Sri Lanka.\",\n      {\n        widget: \"localStatistics\",\n        loading: true,\n        terminateLoading: true,\n        withAvatar: true\n      }\n    );\n\n    this.addMessageToState(message);\n  };\n\n  handleContact = () => {\n    const message = this.createChatBotMessage(\"ola.\", {\n      widget: \"emergencyContact\",\n      loading: true,\n      terminateLoading: true,\n      withAvatar: true\n    });\n\n    this.addMessageToState(message);\n  };\n\n  handleMedicine = () => {\n    const message = this.createChatBotMessage(\n      \"To have clinical medicine safely delivered to your home, please refer to the link below.\",\n      {\n        widget: \"medicineDelivery\",\n        loading: true,\n        terminateLoading: true,\n        withAvatar: true\n      }\n    );\n\n    this.addMessageToState(message);\n  };\n\n  handleJoke = () => {\n    var jokes = [\n      \"So many coronavirus jokes out there, it’s a pundemic!\",\n      \"I’ll tell you a coronavirus joke now, but you’ll have to wait two weeks to see if you got it!\",\n      \"Did you hear the joke about coronavirus? Never mind, I don’t want to spread it around!\",\n      \"What should you do if you don’t understand a coronavirus joke? Be patient!\",\n      \"Why do they call it the novel coronavirus? It’s a long story...\",\n      \"Since we’re all in quarantine I guess we’ll be making only inside jokes from now on!\"\n    ];\n\n    var randomJoke = jokes[Math.floor(Math.random() * jokes.length)];\n\n    const message = this.createChatBotMessage(randomJoke);\n\n    this.addMessageToState(message);\n  };\n\n  handleThanks = () => {\n    const message = this.createChatBotMessage(\"You're welcome, and stay safe!\");\n\n    this.addMessageToState(message);\n  };\n\n  addMessageToState = (message) => {\n    this.setState((state) => ({\n      ...state,\n      messages: [...state.messages, message]\n    }));\n  };\n}\n\nexport default ActionProvider;\n","import React, { useEffect } from \"react\";\nimport Typed from \"typed.js\";\n\nconst TypedReact = () => {\n  // // Create reference to store the DOM element containing the animation\n  // const el = React.useRef(null);\n  // // Create reference to store the Typed instance itself\n  // const typed = React.useRef(null);\n\n  // useEffect(() => {\n  //   setTimeout(() => {\n  //     const options = {\n  //       showCursor: true,\n  //       strings: [\n  //         \"Click on the Bot icon to get started\",\n  //         \"Type in tell a joke and see what happens...\"\n  //       ],\n  //       typeSpeed: 50,\n  //       backSpeed: 50,\n  //       backDelay: 2000\n  //     };\n\n  //     // elRef refers to the <span> rendered below\n  //     typed.current = new Typed(el.current, options);\n\n  //     return () => {\n  //       // Make sure to destroy Typed instance during cleanup\n  //       // to prevent memory leaks\n  //       typed.current.destroy();\n  //     };\n  //   }, 1000);\n  // }, []);\n\n  return (\n    <div>\n      <h3>\n        {/* <span ref={el} /> */}\n        Chat Bot\n      </h3>\n    </div>\n  );\n};\n\nexport default TypedReact;\n","import \"./styles.css\";\nimport { useState } from \"react\";\nimport MetaTags from \"react-meta-tags\";\nimport Fade from \"react-reveal/Fade\";\nimport Flip from \"react-reveal/Flip\";\nimport Chatbot from \"react-chatbot-kit\";\nimport config from \"./chatbotConfig\";\nimport MessageParser from \"./MessageParser\";\nimport ActionProvider from \"./ActionProvider\";\nimport TypedReact from \"./TypedReact\";\n\nexport default function App() {\n  const [showBot, toggleBot] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <MetaTags>\n        <title> Chatbot </title>\n        <meta name=\"description\" content=\"\" />\n      </MetaTags>\n      <TypedReact />\n      {showBot && (\n        <Fade big>\n          <div className=\"app-chatbot-container\">\n            <Chatbot\n              config={config}\n              messageParser={MessageParser}\n              actionProvider={ActionProvider}\n            />\n          </div>\n        </Fade>\n      )}\n      <Flip left cascade>\n        <button\n          className=\"app-chatbot-button\"\n          onClick={() => toggleBot((prev) => !prev)}\n        >\n          <div>Bot</div>\n          <svg viewBox=\"0 0 640 512\" className=\"app-chatbot-button-icon\">\n            <path d=\"M192,408h64V360H192ZM576,192H544a95.99975,95.99975,0,0,0-96-96H344V24a24,24,0,0,0-48,0V96H192a95.99975,95.99975,0,0,0-96,96H64a47.99987,47.99987,0,0,0-48,48V368a47.99987,47.99987,0,0,0,48,48H96a95.99975,95.99975,0,0,0,96,96H448a95.99975,95.99975,0,0,0,96-96h32a47.99987,47.99987,0,0,0,48-48V240A47.99987,47.99987,0,0,0,576,192ZM96,368H64V240H96Zm400,48a48.14061,48.14061,0,0,1-48,48H192a48.14061,48.14061,0,0,1-48-48V192a47.99987,47.99987,0,0,1,48-48H448a47.99987,47.99987,0,0,1,48,48Zm80-48H544V240h32ZM240,208a48,48,0,1,0,48,48A47.99612,47.99612,0,0,0,240,208Zm160,0a48,48,0,1,0,48,48A47.99612,47.99612,0,0,0,400,208ZM384,408h64V360H384Zm-96,0h64V360H288Z\"></path>\n          </svg>\n        </button>\n      </Flip>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}